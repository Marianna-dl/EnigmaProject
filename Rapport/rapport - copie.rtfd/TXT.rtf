{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\froman\fcharset0 TimesNewRomanPSMT;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red64\green64\blue64;\red79\green129\blue189;
\red0\green32\blue96;\red255\green39\blue18;\red23\green54\blue93;}
{\info
{\title Projet Enigma}
{\subject Compte-Rendu}}\paperw11901\paperh16817\margl181\margr198\margb278\margt159\vieww28300\viewh14840\viewkind0
\deftab720
\pard\pardeftab720\pardirnatural

\f0\fs24 \cf0 \
\
\pard\pardeftab720\pardirnatural

\f1\fs28 \cf1 2014-2015\
\pard\pardeftab720\pardirnatural\qc
\cf1 2014-2015\
\pard\pardeftab720\pardirnatural

\fs72 \cf2 Projet Enigma\
\pard\pardeftab720\sb120\pardirnatural

\fs36 \cf3 Compte-Rendu\
\pard\pardeftab720\pardirnatural

\fs72 \cf2 Projet Enigma\
\pard\pardeftab720\sb120\pardirnatural

\fs36 \cf3 Compte-Rendu\
\pard\pardeftab720\pardirnatural

\fs26 \cf4 DUT Informatique (S4)\
\pard\pardeftab720\pardirnatural\qc
\cf4 \
\pard\pardeftab720\pardirnatural
\cf0 TROUVE Robin\
KISSI Na\'efm\
DE LIMA Marianna\
\pard\pardeftab720\pardirnatural\qc
\cf0 DUT Informatique (S4)\
\
\pard\pardeftab720\pardirnatural
\cf0 TROUVE Robin\
KISSI Na\'efm\
DE LIMA Marianna\
\pard\pardeftab720\pardirnatural
\cf0 \ul \ulc0 Encadr\'e9 par\ulnone :\
\
M. ROY\
\ul Encadr\'e9 par\ulnone :\
\
M. ROY\
\pard\pardeftab720\pardirnatural

\fs64 \cf4 \page \
\pard\pardeftab720\pardirnatural\qc

\f2\fs44 \cf0 Sommaire\
\pard\pardeftab720\pardirnatural
\cf0 \
\
\pard\pardeftab720\li360\pardirnatural

\f1\b\fs28 \cf0 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2\
\
\
\pard\pardeftab720\li720\pardirnatural
\cf0 	\'95	Enigma\'a0: Machine de cryptage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\
\pard\pardeftab720\li360\pardirnatural
\cf0 \
\pard\pardeftab720\li1440\pardirnatural

\b0 \cf0 	\'95	 Cr\'e9ation d\'92Enigma (remise en contexte)
\b  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\
\pard\pardeftab720\li2160\pardirnatural

\b0 \cf0 	\'95	 Remise en contexte\
	\'95	 Utilisation d\'92Enigma \
\pard\pardeftab720\li1440\pardirnatural
\cf0 	\'95	 Fonctionnement d\'92Enigma\
\pard\pardeftab720\li2160\pardirnatural
\cf0 	\'95	 Les rotors\
	\'95	 Le plugboard\
	\'95	 Le r\'e9flecteur\
\pard\pardeftab720\li1440\pardirnatural
\cf0 	\'95	\'a0Cryptanalyse par Turing\
\pard\pardeftab720\li792\pardirnatural
\cf0 \
\
\pard\pardeftab720\li720\pardirnatural

\b \cf0 	\'95	Enigma\'a0: Simulation informatique\
\pard\pardeftab720\li360\pardirnatural
\cf0 \
\pard\pardeftab720\li1440\pardirnatural

\b0 \cf0 	\'95	 Organisation du projet (architecture mvc, m\'e9thodes de travail, outils)\
\pard\pardeftab720\li2160\pardirnatural
\cf0 	\'95	Choix et contraintes\
	\'95	Outils de travail\
	\'95	Gestion de l\'92\'e9quipe (r\'e9union, scrum\'a0?, diagramme de gantt, micro -taches) \
\pard\pardeftab720\li1440\pardirnatural
\cf0 	\'95	Repr\'e9sentation d\'92Enigma (ex\'a0: rotor = objet \'85 comment on le conceptualise et comment il fonctionne dans le code, comment on a essay\'e9 de reproduire la machine physique)\
\pard\pardeftab720\li2160\pardirnatural
\cf0 	\'95	 Etude d\'92Enigma\
	\'95	 Conception UML\
\pard\pardeftab720\li1440\pardirnatural
\cf0 	\'95	 Difficult\'e9s rencontr\'e9es et solutions retenues\
\pard\pardeftab720\li792\pardirnatural
\cf0 \
\
\pard\pardeftab720\li720\pardirnatural

\b \cf0 	\'95	Manuel utilisateur\'a0\
\pard\pardeftab720\li360\pardirnatural
\cf0 \
Conclusion\
\
Annexes\
\
\pard\pardeftab720\pardirnatural
\cf0 \
\pard\pardeftab720\li567\pardirnatural\qc
\cf0 \
\pard\pardeftab720\pardirnatural\qc
\cf0 \
\
\
\
\
\
\
\pard\pardeftab720\pardirnatural\qc

\f2\b0\fs44 \cf5 Introduction\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\fs24 \cf0 Dans le cadre de notre DUT Informatique, en semestre 4, nous sommes amen\'e9s \'e0 r\'e9aliser un projet alliant math\'e9matiques et informatique afin d\'92appliquer nos connaissances et la m\'e9thodologie que nous avons pu acqu\'e9rir au cours de notre formation. \
Le sujet de ce projet est la machine Enigma, machine de cryptage la plus connue et utilis\'e9e lors de la Seconde Guerre Mondiale. Il s\'92agit donc ici de comprendre son fonctionnement, ses m\'e9canismes et de pouvoir reproduire son comportement de mani\'e8re informatis\'e9e. \
Ce compte-rendu d\'e9taille notre d\'e9marche pour aborder le sujet, le comprendre et enfin r\'e9aliser techniquement le projet en s\'92organisant au sein du trin\'f4me, en utilisant des outils et les m\'e9thodes appris en cours.\
Nous allons donc voir dans une premi\'e8re partie ce qu\'92est la machine Enigma, son r\'f4le, son fonctionnement et nous nous int\'e9resserons aussi \'e0 sa cryptanalyse par Alan Turing pour comprendre ses failles. Nous verrons ensuite comment nous nous sommes organis\'e9s pour mener le projet \'e0 bien en mettant toutes nos connaissances en \'9cuvre et nous verrons aussi les difficult\'e9s nous avons rencontr\'e9s et comment nous les avons surmont\'e9es.\
\pard\pardeftab720\li567\ri465\pardirnatural\qc
\cf0 \
\pard\pardeftab720\pardirnatural
\cf0 \
\pard\pardeftab720\pardirnatural\qc
\cf0 \
\
\pard\pardeftab720\pardirnatural
\cf0 \
\pard\pardeftab720\li426\pardirnatural\qc
\cf0 \
\pard\pardeftab720\pardirnatural\qc
\cf0 \
\
\pard\pardeftab720\li360\pardirnatural
\cf0 \
\pard\pardeftab720\pardirnatural

\f1\b\fs28 \cf0 \page \
\pard\pardeftab720\li360\pardirnatural\qc
\cf0 \
\pard\pardeftab720\li720\pardirnatural\qc

\fs40 \cf5 	\'95	 Enigma\'a0: Machine de cryptage\
\pard\pardeftab720\pardirnatural\qc
\cf5 \
\pard\pardeftab720\pardirnatural
\cf5 \
\pard\pardeftab720\li1440\pardirnatural

\b0\fs36 \cf5 	\'95	Cr\'e9ation d\'92Enigma\
\pard\pardeftab720\pardirnatural
\cf5 	\
		
\fs32 1.1.1. Remise en contexte  
\fs36 \
\pard\pardeftab720\pardirnatural

\f2\fs24 \cf0 \
\
	Enigma est une machine \'e9letrom\'e9canique  permettant de crypter et de d\'e9crypter un message.\
	Cette machine est essentiellement compos\'e9e de trois rotors qui sont des composants rotatif contenant un circuit, d\'92un r\'e9flecteur , elle est aussi compos\'e9e d\'92un plugboard, d\'92un clavier et d\'92un afficheur de lettre crypt\'e9e mais nous d\'e9tailleront plus en profondeur tous ces composants dans la 	partie suivante.\
\
	Il faut savoir que Enigma a \'e9t\'e9 cr\'e9e par un ing\'e9nieur en \'e9lectricit\'e9 allemand du nom de Arthur Scherbius.\
	Arthur Scherbius est n\'e9 en 1878 et il a \'e9tudi\'e9 \'e0 Munich puis \'e0 Hanovre, initialement il n\'92avait pas pour ambition de cr\'e9e une machine de chiffrement d\'92ailleurs \'e0 la fin de ses \'e9tudes en 1903 il consacre sa th\'e8se \'e0 des syst\'e8mes de turbines \'e0 eau.\
	C\'92est dans les ann\'e9e 1910 plus pr\'e9cis\'e9ment \'e0 partir de 1918 que Arthur Scherbius commence \'e0 s\'92int\'e9resser aux syst\'e8mes de chiffrement, il d\'e9cide alors d\'92entamer la cr\'e9ation d\'92un syst\'e8me de cryptage r\'e9volutionnaire pour l\'92\'e9poque du nom d\'92Enigma.\
							\cf6 (mettre ici la photo de Arthur Scherbius)\cf0 \
	En effet, Enigma \'e9tait le seul syst\'e8me de cryptage poss\'e9dant des rotors d\'e9synchronis\'e9, cette m\'e9thode permettait de d\'e9cupler le nombre de combinaison possible et d\'e9pass\'e9 de loin tout les syst\'e8mes de chiffrement de l\'92\'e9poque en terme de s\'e9curit\'e9.\
	Il y avait notamment le chiffre de Vigen\'e8re, cr\'e9e par Vigen\'e8re lui m\'eame en 1586. Sa m\'e9thode consist\'e9 \'e0 substituer une lettre par une autre, c\'92\'e9tait un chiffrement polyalphab\'e9tique, en effet il utilisait 10 alphabets diff\'e9rents mais malheureusement ce syst\'e8me fut consid\'e9r\'e9 comme peu s\'fbr 	voir obsol\'e8te car un major prussien du nom de Friedrich Kasiski avait r\'e9ussi \'e0 briser le myst\'e8re de ce syst\'e8me en 1863.\
							\cf6 (Image de Vigen\'e8re)\cf0 \
	C\'92est pour cela que le m\'e9canisme d\'92Enigma fut une v\'e9ritable r\'e9volution \'e0 l\'92\'e9poque, il \'e9tait consid\'e9r\'e9 comme inviolable car il fallait avoir la m\'eame machine que celle qui \'e0 crypt\'e9 le message pour avoir une chance de le d\'e9crypter de plus  il \'e9tait impossible de tester toute les possibilit\'e9s 		de combinaison d\'92Enigma sans connaitre la combinaison initiale des rotors mais nous verrons qu\'92il y avait tout de m\'eame une faille qui a \'e9t\'e9 exploit\'e9 par un certain Alan Turing. \
	Pour prot\'e9ger sa cr\'e9ation Arthur Scherbius d\'e9cide de brevet\'e9 sont oeuvre, malheureusement pour Arthur Scherbius d\'92autres talentueux inventeurs ont d\'e9pos\'e9 des brevets semblables \'e0 travers le monde notamment le hollandais Koch qui d\'e9pose sont brevet d\'e8s 1919 soit un an apr\'e8s celui 	de Arthur Scherbius .\
\
	La soci\'e9t\'e9 de Scherbius avait vu ce brevet d\'92un mauvais oeil et donc pour \'e9viter que celui ci leur porte pr\'e9judice dans le futur, il a d\'e9cid\'e9 de racheter le brevet de Koch.\
\
			(\cf6 image brevet d\'e9pos\'e9 par Arthur Scherbius en 1928) \cf0 \
\pard\pardeftab720
\cf0 \
\
\pard\pardeftab720\pardirnatural
\cf0 		 \
\pard\pardeftab720\pardirnatural

\f1 \cf0 		
\fs32 \cf5 1.1.2.  Utilisation
\fs24 \cf0 \
		\
	Apr\'e8s que Arthur Scherbius ai brevet\'e9 son invention et que sa soci\'e9t\'e9 a rachet\'e9 le brevet de Koch, il d\'e9cide de commercialiser sa machine l\'92Enigma-A or son invention n\'92a pas eu le succ\'e8s escompt\'e9, en effet c\'92est un \'e9chec commercial car sa machine est consid\'e9r\'e9 comme \'ab\'a0trop ch\'e8re\'a0\'bb 	avoisinant les 	30 000 euros, pourtant plus tard trois autres versions commercial verrons le jour.\
					\cf6 (image enigma-a)\cf0 \
	Ici nous allons pas nous int\'e9resser \'e0 la version commercial mais plut\'f4t \'e0 la version militaire qui a \'e9t\'e9 surnomm\'e9 l\'92Enigma-D et qui a \'e9t\'e9 adopt\'e9 par l\'92arm\'e9e allemande d\'e8s 1926 plus pr\'e9cis\'e9ment par la Marine puis par l\'92arm\'e9e de terre en 1929 par la suite la machine a \'e9t\'e9 exploit\'e9e par les 	nazis qui l\'92a renomme \'ab\'a0machine M\'a0\'bb.\
					\cf6 (image enigma-d)\cf0 \
	\
\pard\pardeftab720\pardirnatural

\b\fs28 \cf0 	
\b0\fs24 En effet, l\'92Enigma fut l\'92un des plus grand atout de communication et \'e9tait tr\'e8s utilis\'e9  par l\'92Allemagne nazie et ses alli\'e9s pendant la seconde guerre mondiale, ils l\'92utilisaient pour les bulletin m\'e9t\'e9o mais surtout pour les informations sensibles notamment sur les tactiques militaire et 		strat\'e9gie \'e0 adopter face \'e0 l\'92ennemie, donc autant dire que les nazies faisaient une totale confiance au syst\'e8me de Arthur Scherbius car l\'92issus de la guerre en d\'e9pendait.\
\
	Ils utilisaient Enigma de la mani\'e8re suivante :\
		-Enigma dispos\'e9 d\'92un plugboard, ce plugboard reli\'e9 deux lettres qui ce substitu\'e9es par exemple si le A \'e9tait reli\'e9 au B alors A est substitu\'e9 par B et vice et versa, cela permettait de rajouter une s\'e9curit\'e9 m\'e9canique suppl\'e9mentaire et prot\'e9g\'e9 le code m\'eame si la position des rotors 			\'e9taient connus.\
\
		-Puis on va taper sur le clavier la lettre que l\'92on veut crypter si par exemple on veut crypter la lettre A nous devons d\'92abord regarder \'e0 quoi le A est substitu\'e9 en l\'92occurence dans notre exemple il est substitu\'e9 au B donc nous devons taper B pour crypter notre A.\
\
		-La touche press\'e9e permet d\'92activer un courant \'e9lectrique qui traverserons les circuits dans chaque rotor pour arriver jusqu\'92au r\'e9flecteur, puis celui-ci le renvoira de nouveau \'e0 travers les rotors pour finir sa course dans l\'92afficheur ou une lampe s\'92allumera et qui correspondra \'e0 la 			lettre crypt\'e9e\
		\
		-Une fois la lettre crypt\'e9e le premier rotor tourne pour changer la configuration des circuit donc si nous tapons de nouveau A par exemple une nouvelle lettre crypt\'e9 s\'92affichera diff\'e9rente de la premi\'e8re.\
\
		-Et pour finir on r\'e9cup\'e8re la lettre crypt\'e9 pour la substituer de nouveau \'e0 une nouvelle lettre du plugboard avec lequel la lettre crypt\'e9 est reli\'e9e.\
\
	Les nazis consid\'e9raient ce syst\'e8me de chiffrement inviolable mais un homme r\'e9ussi l\'92exploit, d\'e9chiffrer Enigma, cet homme c\'92est Alan Mathison Turing dit Alan Turing qui \'e9tait math\'e9maticien, cryptologue et informaticien britannique, il est n\'e9 le 23 juin 1912 et mort le 7 juin 1954.\
\
								(\cf6 photo Alan Turing)\cf0 \
	Alan Turing cr\'e9e alors une machine surnomm\'e9 \'ab\'a0Bomb\'a0\'bb qui permet de tester des combinaisons possible d\'92Enigma mais pas toute car cela serai impossible dans un d\'e9lais humain.\
								\cf6 (photo machine bomb)\cf0 \
	Il r\'e9duit donc les combinaisons possible \'e0 tester gr\'e2ce \'e0 la m\'e9thode qu\'92il a trouv\'e9. Il se sert d\'92une faille du syst\'e8me Enigma, en effet il faut savoir que quand une lettre est crypt\'e9e elle est substitu\'e9e en une autre lettre que elle m\'eame donc un N ne pourra jamais donner un N. De plus 		l\'92autre faille venait du syst\'e8me allemand en lui m\'eame, c\'92est \'e0 dire qu\'92ils avaient l\'92habitude  d\'92envoyer un bulletin m\'e9t\'e9o tout les jours \'e0 6h et ce bulletin m\'e9t\'e9o avait toujours la m\'eame forme.\

\b\fs28 \page 	
\b0\fs24 Il contenait notamment le mot \'ab\'a0wetterbericht\'a0\'bb qui voulait dire bulletin m\'e9t\'e9o en allemand et se finissait toujours par \'ab\'a0Hitler\'a0\'bb.\
	Donc via ces failles Alan Turing compar\'e9 ces mots cl\'e9s avec le message cod\'e9 notamment en v\'e9rifiant que chaque lettre du mot cl\'e9 soit diff\'e9rent de ce du message cod\'e9 avec lesquelles on les compares, si ce n\'92\'e9tait pas le cas il d\'e9plac\'e9 le mot cl\'e9 jusqu\'92a que toute les lettres soient 		diff\'e9rentes, cela signifi\'e9 que le mot cl\'e9 \'e9tait pr\'e9sent dans la phrase.\
\
	A partir de ces \'e9l\'e9ments Alan Turing r\'e9ussi \'e0 trouver les combinaisons des rotors pour lequel le message \'e0 \'e9tait cod\'e9 seulement en 20 minutes. De plus il a r\'e9ussi \'e0 \'e9courter la guerre de deux ans gr\'e2ce \'e0 ses messages d\'e9crypt\'e9s.\
 
\b\fs28 \
\pard\pardeftab720\li1440\pardirnatural

\b0\fs36 \cf5 	\'95	Fonctionnement d\'92Enigma\
\pard\pardeftab720\li1080\pardirnatural
\cf5 \
\pard\pardeftab720\pardirnatural
\cf5 		
\fs32 1.2.1.  Les rotors	\
\pard\pardeftab720\li1080\pardirnatural
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2\fs24 \cf0 Nous allons \'e0 pr\'e9sent voir en d\'e9tail comment Enigma fonctionne, quelles sont ses particularit\'e9s qui l\'92ont rendu si difficile \'e0 \'ab\'a0casser\'a0\'bb.\
\
La puissance d\'92Enigma r\'e9side dans le fait qu\'92elle est impr\'e9visible en terme de chiffrement des mots rentr\'e9s et cela est directement permis par sa structure interne. C\'92est la combinaison de ses composants qui la rend si performante mais quels sont-ils\'a0? En tant que machine \'e9lectrom\'e9canique, Enigma est compos\'e9e de rotors fonctionnant avec des contacts \'e9lectriques permettant la subsitution poly-alphab\'e9tique, c\'92est d\'92ailleurs une de ses particularit\'e9s. \
\
Les rotors servent de connexion \'e9lectriques, ils sont au nombre de 3 dans la machine et pouvaient \'eatre choisis parmi 5 rotors en tout. Leur particularit\'e9 vient du fait qu\'92ils sont cylindriques et fix\'e9s sur un axe autour duquel ils peuvent tourner. A chaque lettre tap\'e9e, le rotor effectue une rotation qui change compl\'e9tement la donne pour la lettre suivante car du coup, la permutation sera diff\'e9rente pour chaque lettre m\'eame si celle-ci est retap\'e9e.\
\
\
\
C\'92est un des points forts d\'92Enigma car de ce fait, l\'92analyse par fr\'e9quence qui consiste \'e0 rep\'e9rer les lettres qui reviennent fr\'e9quemment dans un message crypt\'e9 est impossible. Mais comme signal\'e9, il y a 3 rotors en tout. Chaque rotor repr\'e9sente les lettres/chiffres que l\'92on veut crypter. Par exemple, si on prend l\'92alphabet de 26 lettres, chaque rotor aura 26 positions. Le 1\super er\nosupersub  rotor tourne d\'92un cran \'e0 chaque fois qu\'92une lettre est tap\'e9e, de sa 26\super e\nosupersub  position \'e0 sa position initiale, il d\'e9clenche le 2\super e\nosupersub  rotor qui lui aussi tourne d\'92un cran. Lorsque le 2\super e\nosupersub  rotor effectue sa rotation de sa 26\super e\nosupersub  lettre \'e0 sa position initiale, il d\'e9clenche \'e0 son tour le 3\super e\nosupersub  rotor. Les rotors reviennent \'e0 leur position initiale lorsqu\'92ils ont tous parcouru leur 26 positions. Chaque rotor pouvait \'eatre positionn\'e9 de 1 \'e0 26 avant de commencer \'e0 taper le message.\
\
Nous avons sch\'e9matis\'e9 les 3 rotors avec 4 lettres selon un circuit \'e9lectrique de cette mani\'e8re\'a0: \
\
	  	Rotor 1			Rotor 2			Rotor 3\
\
A													A\
\
B													B\
\
C													C\
\
D													D\
\
\
													\
On peut voir ici que si on tape lettre \'ab\'a0A\'a0\'bb, elle sera permut\'e9e en \'ab\'a0B\'a0\'bb \'e0 l\'92issu du rotor 1 puis en \'ab\'a0D\'a0\'bb et enfin en \'ab\'a0B\'a0\'bb. Le rotor 1 tournera d\'92un cran et ses sorties seront d\'e9cal\'e9es ce qui permettra d\'92avoir une lettre crypt\'e9e diff\'e9rente m\'eame si on retape \'e0 nouveau \'ab\'a0A\'a0\'bb.\
\
Si on calcule le nombre de possibilit\'e9s de cryptage qu\'92offrent les rotors, nous avons\'a0:\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qc
\cf0 \
Soit\'a0:  \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
Jusqu\'92ici nous avons donc 60 possibilit\'e9s de choix de rotors (3 parmis 5) et 17\'a0576 (pour un alphabet de 26 lettres) positions possibles des rotors car chaque rotor \'e0 26 positions donc 26*26*26 soit un total de 1\'a0054\'a0560 possibilit\'e9s de cryptage. Si l\'92alphabet comporte plus de caract\'e8res, cela augmentera le nombre de positions possibles des rotors et donc le nombre de possibilit\'e9s total.\
\
\
\
\pard\pardeftab720\ri465\pardirnatural\qj

\f1\fs36 \cf5 		
\fs32 1.2.2.  Le plugboard\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2\fs24 \cf0 Mais Enigma ne s\'92arr\'eate pas \'e0 ces trois rotors tournant, en effet, un des composants central de cette machine est le tableau de connexion (plugboard), situ\'e9 devant la machine et permettant d\'92effectuer 10 paires de permutation. Le plugboard \'e9tait sp\'e9cialement con\'e7u pour les machines utilis\'e9es \'e0 des fins militaires, les versions commerciales en \'e9taient d\'e9pourvues.\
\pard\pardeftab720\pardirnatural\qj
\cf0 \
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 Les permutations sont commutatives c\'92est-\'e0-dire que si la lettre \'ab\'a0A\'a0\'bb est reli\'e9e \'e0 la lettre \'ab\'a0B\'a0\'bb alors la lettre \'ab\'a0A\'a0\'bb sera permut\'e9e avec la lettre \'ab\'a0B\'a0\'bb mais la lettre \'ab\'a0B\'a0\'bb sera permut\'e9e avec la lettre \'ab\'a0A\'a0\'bb.\
Il y a donc 20 lettres permut\'e9es et 6 inchang\'e9es dans un alphabet de 26 lettres.\
Le but du plugboard \'e9tait de brouiller les pistes car une lettre tap\'e9e \'e9tait d\'92abord permut\'e9e suivant le tableau de connexion puis cod\'e9e.  \
\pard\pardeftab720\li1080\pardirnatural\qj
\cf0 \
\
\
\pard\pardeftab720\li1080\ri465\pardirnatural\qj
\cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 Concr\'e8tement, cela signifie que si \'ab\'a0A\'a0\'bb \'e9tait permut\'e9e avec \'ab\'a0B\'a0\'bb, c\'92est la lettre \'ab\'a0B\'a0\'bb qui serait effectivement crypt\'e9e en passant dans les rotors.\
Nous avons donc enrichi notre sch\'e9ma (cf rotors ci-dessus)  avec le plugboard ce qui nous donne sur un alphabet de 4 lettres\'a0:\
\pard\pardeftab720\li567\pardirnatural\qj
\cf0 \
\
\pard\pardeftab720\pardirnatural\qj

\f1 \cf0 		Plugboard			Rotor 1		   Rotor 2			Rotor 3\
\pard\pardeftab720\pardirnatural\qj

\f2 \cf0 \
\pard\pardeftab720\pardirnatural\qj

\f1 \cf0 	\
A														   A\
\pard\pardeftab720\pardirnatural\qj

\f2 \cf0 \
\pard\pardeftab720\pardirnatural\qj

\f1 \cf0 B														   B\
\
C														   C\
\
D														   D\
\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2 \cf0 Dans ce cas-ci, les lettres \'ab\'a0A\'a0\'bb et \'ab\'a0B\'a0\'bb sont permut\'e9es alors que les lettres \'ab\'a0C\'a0\'bb et \'ab\'a0D\'a0\'bb restent inchang\'e9es. Si on veut crypter la lettre \'ab\'a0A\'a0\'bb, c\'92est donc en fait la lettre \'ab\'a0B\'a0\'bb qui va \'eatre crypt\'e9e et on obtiendra donc en permutations\'a0successives: A->B, B->A, A->B, B->D.\
\pard\pardeftab720\li567\pardirnatural\qj
\cf0 \
\
\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
Si nous calculons les possibilit\'e9s qu\'92offrent les branchements frontaux pour un alphabet de 26 lettres nous avons\'a0:\
 \
\pard\pardeftab720\li567\ri465\pardirnatural\qc

\f1\fs32 \cf0  = 
\fs28 150\'a0738\'a0274\'a0937\'a0250\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2\fs24 \cf0 En effet, nous avons 26 combinaisons de lettres (26x25x24\'85x1) ce qui justifie le \'ab\'a026\'a0!\'a0\'bb. Cependant, nous ne voulons faire que 10 paires de lettres donc 6 lettres restent non permut\'e9es. Etant donn\'e9 que l\'92ordre des combinaisons n\'92importe pas, nous pouvons diviser par \'ab\'a06\'a0!\'a0\'bb et multiplier par le nombre de combinaison possible pour les 10 paires soit \'ab\'a010\'a0!\'a0\'bb. Enfin les paires sont constitu\'e9es de deux lettres interchangeables, on peut alors diviser par \'ab\'a02\'a0\'bb et comme il y a 10 paires de lettres cela nous donne \'ab\'a0\'bb\
Le plugboard est donc un \'e9l\'e9ment central car c\'92est lui qui augmente consid\'e9rablement le nombre de possibilit\'e9s.\
\pard\pardeftab720\ri465\pardirnatural\qj
\cf0           Si on rajoute les possibilit\'e9s qu\'92offraient les rotors nous avons\'a0: \
\
\pard\pardeftab720\ri465\pardirnatural\qc

\f1\fs28 \cf0 158\'a0962\'a0555\'a0217\'a0826\'a0360\'a0000\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\fs24 \cf0  \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2 \cf0 Voil\'e0 donc le nombre de possibilit\'e9s de cryptage que permettait Enigma gr\'e2ce \'e0 la combinaison de ses composants.\
\
\
\
\pard\pardeftab720\ri465\pardirnatural\qj

\f1 \cf0 	  
\fs32 \cf5 1.2.3.  Le r\'e9flecteur\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf5 		    
\f2\fs24 \cf0 Cependant, \'e0 ce stade, la machine est capable de crypter mais pas de d\'e9crypter. Il faudrait donc une machine pour crypter et cr\'e9er une seconde machine pour d\'e9crypter. Pour pallier \'e0 ce probl\'e8me, Enigma s\'92est dot\'e9e d\'92un r\'e9flecteur, une sorte de rotor fixe qui a pour but de faire une ultime permutation et de renvoyer le courant dans l\'92autre sens. De ce fait, il inverse par paires les lettres et permet de lier les lettres de fa\'e7on \'e0 pouvoir rendre le cryptage r\'e9versible. Concr\'e8tement, si on tape la lettre \'ab\'a0A\'a0\'bb et qu\'92elle est crypt\'e9e en \'ab\'a0D\'a0\'bb alors lorsqu\'92on d\'e9cryptera la lettre \'ab\'a0D\'a0\'bb elle renverra \'ab\'a0A\'a0\'bb (la machine doit avoir les m\'eames param\'e9trages pour le cryptage et le d\'e9cryptage).\
\pard\pardeftab720\ri465\pardirnatural\qj
\cf0 \
\
	Il
\f1  
\f2 existait plusieurs versions de r\'e9flecteur.  La version B \'e9tait la plus couramment utilis\'e9e mais il a aussi exist\'e9 les versions C et D. Certaines de ces versions permettant de positionner le r\'e9flecteur de diff\'e9rentes mani\'e8res (diff\'e9rentes positions un peu comme les rotors).\
\
\pard\pardeftab720\li567\pardirnatural\qj
\cf0 \
\
\
\pard\pardeftab720\pardirnatural\qj
\cf0 \
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 Le principe m\'eame du r\'e9flecteur emp\'eachait toute lettre d\'92\'eatre cod\'e9e par elle-m\'eame ce qui sera largement exploit\'e9 lors de la cryptanalyse de Turing que nous verrons dans la prochaine partie.\
\pard\pardeftab720\li709\ri465\pardirnatural\qj
\cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 Nous pouvons enrichir une derni\'e8re fois notre sch\'e9ma pour montrer une version compl\'e8te du fonctionnement d\'92Enigma\'a0:\
\pard\pardeftab720\pardirnatural

\f1 \cf0 \page \
\pard\pardeftab720\ri465\pardirnatural\qj
\cf0 		\
	\
		  Plugboard 		        Rotor 1			Rotor 2		Rotor 3		Reflecteur\
\pard\pardeftab720\ri465\pardirnatural\qj

\f2 \cf0 \
\pard\pardeftab720\ri465\pardirnatural\qj

\f1 \cf0 	A\
\
	B\
\
	C\
\
	D\
\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 L\'e9gende\'a0: Cryptage\'a0:   chemin aller\
				chemin retour\
		  Decryptage\'a0: chemin aller\
				 chemin retour\
\
Reprenons notre exemple pour crypter la lettre \'ab\'a0A\'a0\'bb.\
		ALLER					REFLECTEUR					RETOUR\
Plugboard\'a0: \'ab\'a0A\'a0\'bb devient \'ab\'a0B\'a0\'bb 	R\'e9flecteur\'a0: \'ab\'a0D\'a0\'bb devient \'ab\'a0A\'a0\'bb	 Rotor 3\'a0: \'ab\'a0A\'a0\'bb devient \'ab\'a0C\'a0\'bb\
Rotor 1\'a0: \'ab\'a0B\'a0\'bb devient \'ab\'a0A\'a0\'bb							 Rotor 2\'a0: \'ab\'a0C\'a0\'bb devient \'ab\'a0D\'a0\'bb\
Rotor 2\'a0: \'ab\'a0A\'a0\'bb devient \'ab\'a0B\'a0\'bb							 Rotor 1\'a0: \'ab\'a0D\'a0\'bb devient \'ab\'a0C\'a0\'bb\
Rotor 3\'a0: \'ab\'a0B\'a0\'bb devient \'ab\'a0D\'a0\'bb							Plugboard\'a0: \'ab\'a0C\'a0\'bb reste \'ab\'a0C\'a0\'bb\
\
\'ab\'a0A\'a0\'bb est donc crypt\'e9e en \'ab\'a0C\'a0\'bb et si on veut d\'e9crypter \'ab\'a0C\'a0\'bb, on remonte le chemin retour jusqu\'92au d\'e9but du chemin aller et on obtient bien \'ab\'a0A\'a0\'bb. Lorsque la lettre est pass\'e9e par tous les composants, une pile \'e9lectrique, alimentant Enigma, permet d\'92allumer la lampe correspond \'e0 la lettre crypt\'e9e/d\'e9crypt\'e9e que l\'92on doit alors noter.\
\
\
Le fonctionnement d\'92Enigma permet donc de faire une machine \'e0 crypter et d\'e9crypter tr\'e8s puissante, avec tr\'e8s peu de failles. Cependant, la seule faiblesse apparente qu\'92elle a (une lettre ne peut \'eatre crypt\'e9e par elle-m\'eame) va \'eatre le point de d\'e9part de la cryptanalyse d\'92Alan Turing.\
\
\pard\pardeftab720\li1440\pardirnatural
\cf0 	\'95	\page \pard\pardeftab720\li1440\pardirnatural

\fs36 \cf7 Cryptanalyse par Alan Turing\
\pard\pardeftab720\li1080\pardirnatural
\cf7 \
\
\
\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f2\fs24 \cf0 Transition\'a0:\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f1\fs32 \cf5  
\f2\fs24 \cf0 Apr\'e8s avoir termin\'e9 l\'92\'e9tude d\'92Enigma, son fonctionnement, sa mani\'e8re de crypter et de d\'e9crypter, nous pouvions passer \'e0 la r\'e9alisation du projet c\'92est-\'e0-dire simuler la machine Enigma en informatique. 
\f1\fs36 \cf7 \page \
\pard\pardeftab720\li1080\pardirnatural
\cf7 \
\pard\pardeftab720\li720\pardirnatural\qc

\b\fs40 \cf5 	\'95	Enigma\'a0: Simulation informatique\
\pard\pardeftab720\li426\pardirnatural
\cf5 \
\
\pard\pardeftab720\li1440\pardirnatural

\b0\fs36 \cf5 	\'95	Organisation du projet\
\pard\pardeftab720\li1080\pardirnatural
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural

\f2\fs24 \cf0 		    Avant de nous lancer dans le d\'e9veloppement du projet, nous avons d\'fb dans un premier temps nous organiser sur diff\'e9rents points. \
\
\
\pard\pardeftab720\li567\ri465\pardirnatural

\f1\fs32 \cf5 		2.1.1. Choix et contraintes\
\pard\pardeftab720\li567\pardirnatural
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural
\cf5 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf5 		    
\f2\fs24 \cf0 Nous avons d\'fb effectuer certains choix avant de commencer \'e0 d\'e9velopper et m\'eame avant de pouvoir   conceptualiser le projet.\
\pard\pardeftab720\li567\ri465\pardirnatural
\cf0 Nous nous sommes tout d\'92abord pos\'e9 la question du choix du langage de programmation. Celui-ci \'e9tant compl\'e9tement libre avec pour seule obligation, avoir une interface graphique, nous pouvions partir sur du d\'e9veloppement logiciel (C, C++, Java) mais aussi sur du d\'e9veloppement web (html, css, javascript). Parmi les langages que nous connaissons, celui que nous avons le plus utilis\'e9 et o\'f9 nous nous sentons le plus \'e0 l\'92aise reste le langage Java. \
\pard\pardeftab720\li567\ri465\pardirnatural

\f1 \cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural

\f2 \cf0 C\'92est donc le langage de programmation Java, langage orient\'e9 objet, que nous avons retenu \'e9tant donn\'e9 que nous avons d\'e9j\'e0 eu un cours d\'92interface Homme Machine facilitant le d\'e9veloppement de l\'92interface graphique et que nous sommes \'e0 l\'92aise avec la notion d\'92objet qui nous a paru coh\'e9rent avec les composants de la machine Enigma (nous d\'e9taillerons ce point dans une prochaine partie).\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f1\fs32 \cf5 		    
\f2\fs24 \cf0 Nous avons eu, au semestre dernier, un cours sur les principaux design pattern que l\'92on peut utiliser afin d\'92avoir une bonne conception d\'92un projet permettant de d\'e9crire une solution standard \'e0 un probl\'e8me de conception logiciel qui peut \'eatre par la suite r\'e9utilis\'e9 sans avoir \'e0 modifier le code existant (dans le cas de rajout de classes par exemples). Les design pattern permettent de respecter un certain nombre de bonnes pratiques permettant une conception optimis\'e9e et de ce fait un code clair et organis\'e9.\

\f1\fs32 \cf5 		    
\f2\fs24 \cf0 Dans le cadre de notre projet, nous avons d\'e9cid\'e9 d\'92utilis\'e9 le design pattern MVC (Mod\'e8le Vue Contr\'f4leur) permettant de faire communiquer les diff\'e9rentes couches de notre projet de fa\'e7on \'e9v\'e8nementielle c\'92est-\'e0-dire qu\'92une action de l\'92utilisateur via l\'92interface graphique (la vue) d\'e9clenche automatiquement un \'e9v\'e8nement dans le contr\'f4leur qui lui-m\'eame se chargera de notifier la couche mod\'e8le (c\'92est le c\'9cur du projet, elle contient toutes les donn\'e9es principales et se charge des principaux calcul).\
		     Afin de faciliter cette programmation \'e9v\'e8nementielle, nous avons impl\'e9ment\'e9 les classes observer et observable d\'e9finie par d\'e9faut en Java et pour cr\'e9er l\'92interface graphique, nous avons utilis\'e9 la biblioth\'e8que Swing de Java. Nous avons ainsi d\'e9fini l\'92architecture globale de notre projet et commenc\'e9 la phase de conception.\
\
	\
\
\
\
\
\
\
\
\
\
\
Voici un petit sch\'e9ma explicatif\'a0du design pattern MVC:\
\pard\pardeftab720\li567\ri465\pardirnatural
\cf0 \
	\
\pard\pardeftab720\li1080\pardirnatural

\f1 \cf0 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\li1080\pardirnatural

\f2 \cf0 Source\'a0: http://raphael-waeselynck.developpez.com/tutoriels/java/java-me/mvc/\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\pardirnatural

\f1\fs32 \cf5 		2.1.2. Outils de travail\
\
\pard\pardeftab720\pardirnatural

\fs36 \cf0 		
\f2\fs24 	 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f1\fs32 \cf5 		    
\f2\fs24 \cf0 Ces choix nous ont permis de d\'e9fini les outils de travail que nous allions utiliser pour partager notre travail et communiquer efficacement.\
\
 Comme appris en cours de m\'e9thodologie, nous avons utilis\'e9 Github, une plateforme de d\'e9veloppement collaboratif bas\'e9e sur git, un outil de versionning. Cet outil permet de mettre en ligne notre projet et les \'e9volutions apport\'e9es de fa\'e7on \'e0 ce que tous les membres de l\'92\'e9quipe aient la derni\'e8re version du projet disponible et puisse rendre accessible instantan\'e9ment toutes les modifications effectu\'e9es. Cela facilite grandement la cr\'e9ation de projet et nous permet d\'92\'eatre tr\'e8s r\'e9actifs quant aux erreurs qui pourraient y avoir sur le projet pour les corriger rapidement et ne pas continuer de d\'e9velopper sur une mauvaise base.\
\
\
\
\
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\f1 \cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj

\fs32 \cf5 		    
\f2\fs24 \cf0 Concernant le d\'e9veloppement, nous avons d\'e9cid\'e9 d\'92utiliser Eclipse du au choix du langage de  programmation qui est un IDE (Integrated Developement Environment) permettant de d\'e9velopper des logiciel en langage Java et de faciliter les tests fonctionnels. C\'92est un des IDE les plus utilis\'e9 pour le d\'e9veloppement Java (avec netbeans) et c\'92est aussi celui que nous connaissons le mieux car nous l\'92avons d\'e9j\'e0 utilis\'e9 lors d\'92un projet ult\'e9rieur et lors des s\'e9ances de programmation \'e0 l\'92IUT.\
\
\
\
		    \
	    Nous avons aussi \'e9t\'e9 amen\'e9s \'e0 utiliser le logiciel Mumble, un logiciel VoIP, afin de communiquer oralement en \'e9quipe lorsque nous ne pouvions pas nous voir \'e0 l\'92IUT.\
Cela nous a permis de communiquer efficacement, de r\'e9fl\'e9chir aux \'e9ventuelles difficult\'e9s et de proposer des solutions facilement sans avoir \'e0 attendre de se retrouver \'e0 l\'92IUT pour en parler.\
\
\
\
\
		\
		\
\pard\pardeftab720\pardirnatural
\cf0 \page \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
\pard\pardeftab720\pardirnatural
\cf0 \page \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
\
\pard\pardeftab720\li1440\pardirnatural
\cf0 \
\
\pard\pardeftab720\pardirnatural
\cf0 \
\pard\pardeftab720\li1080\pardirnatural
\cf0 \
\pard\pardeftab720\li567\ri465\pardirnatural\qj
\cf0 \
\
\pard\pardeftab720\li567\pardirnatural

\f1 \cf0 Annexes\'a0:\
\
https://www.youtube.com/watch?v=G2_Q9FoD-oQ par \'ab\'a0numberphile\'a0\'bb\
\
https://www.youtube.com/watch?v=7dpFeXV_hqs par \'ab\'a0e-penser\'a0\'bb\
\pard\pardeftab720\pardirnatural
\cf0 	\
	https://interstices.info/encart.jsp?id=c_9752&encart=0&size=790,700\
\
http://www.apprendre-en-ligne.net/crypto/Enigma/\
\
\
}